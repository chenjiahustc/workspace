<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>

		<property name="url">
			<value>jdbc:mysql://localhost:3306/library</value>
		</property>

		<property name="username">
			<value>root</value>
		</property>

		<property name="password">
			<value>hello</value>
		</property>

	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">

		<property name="dataSource">
			<ref local="dataSource" />
		</property>

		<property name="mappingResources">
			<list>
				<value>com/integration/entity/Recorder.hbm.xml</value>
				<value>com/integration/entity/Admin.hbm.xml</value>
				<value>com/integration/entity/Book.hbm.xml</value>
				<value>com/integration/entity/Reader.hbm.xml</value>
			</list>
		</property>


		<property name="hibernateProperties">

			<props>

				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>

			</props>

		</property>

	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<!-- userDao -->
	<bean id="readerDao" class="com.integration.dao.impl.ReaderDAOImpl" scope="singleton">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="readerServiceTarget" class="com.integration.service.impl.ReaderServiceImpl">
		<property name="readerDao" ref="readerDao"></property>
	</bean>

	<bean id="readerService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">

		<property name="target" ref="readerServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>

		<property name="transactionAttributes">

			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>

		</property>

	</bean>

	<bean id="saveReaderAction" class="com.integration.action.reader.SaveReaderAction"
		scope="prototype">
		<property name="service" ref="readerService"></property>
	</bean>

	<bean id="listReaderAction" class="com.integration.action.reader.ListReaderAction"
		scope="prototype">
		<property name="service" ref="readerService"></property>
	</bean>

	<bean id="removeReaderAction" class="com.integration.action.reader.RemoveReaderAction"
		scope="prototype">
		<property name="service" ref="readerService"></property>
	</bean>

	<bean id="updatePReaderAction" class="com.integration.action.reader.UpdatePReader">
		<property name="service" ref="readerService"></property>
	</bean>

	<bean id="updateReaderrAction" class="com.integration.action.reader.UpdateReaderAction"
		scope="prototype">
		<property name="service" ref="readerService"></property>
	</bean>

	<bean id="readerAction" class="com.integration.action.reader.ReaderAction"
		scope="prototype">
		<property name="readerService" ref="readerService"></property>
	</bean>

	<!-- adminDao -->
	<bean id="adminDao" class="com.integration.dao.impl.AdminDAOImpl" scope="singleton">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="adminServiceTarget" class="com.integration.service.impl.AdminServiceImpl">
		<property name="adminDao" ref="adminDao"></property>
	</bean>

	<bean id="adminService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">

		<property name="target" ref="adminServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>

		<property name="transactionAttributes">

			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>

		</property>

	</bean>

	<bean id="saveAdminAction" class="com.integration.action.admin.SaveAdminAction"
		scope="prototype">
		<property name="adminService" ref="adminService"></property>
	</bean>

	<bean id="adminServiceAction" class="com.integration.action.admin.AdminServiceAction"
		scope="prototype">
		<property name="adminService" ref="adminService"></property>
	</bean>

	<!-- bookDao -->
	<bean id="bookDao" class="com.integration.dao.impl.BookDAOImpl" scope="singleton">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="bookServiceTarget" class="com.integration.service.impl.BookServiceImpl">
		<property name="bookDao" ref="bookDao"></property>
	</bean>

	<bean id="bookService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">

		<property name="target" ref="bookServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>

		<property name="transactionAttributes">

			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>

		</property>

	</bean>

	<bean id="saveBookAction" class="com.integration.action.book.SaveBookAction"
		scope="prototype">
		<property name="bookService" ref="bookService"></property>
	</bean>

	<bean id="listBookAction" class="com.integration.action.book.ListBookAction"
		scope="prototype">
		<property name="bookService" ref="bookService"></property>
	</bean>

	<bean id="removeBookAction" class="com.integration.action.book.RemoveBookAction"
		scope="prototype">
		<property name="bookService" ref="bookService"></property>
	</bean>

	<bean id="updatePBookAction" class="com.integration.action.book.UpdatePBook">
		<property name="bookService" ref="bookService"></property>
	</bean>

	<bean id="updateBookAction" class="com.integration.action.book.UpdateBookAction"
		scope="prototype">
		<property name="bookService" ref="bookService"></property>
	</bean>


	<!-- recorderDao -->
	<bean id="recorderDao" class="com.integration.dao.impl.RecorderDAOImpl" scope="singleton">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="recorderServiceTarget" class="com.integration.service.impl.RecorderServiceImpl">
		<property name="recorderDao" ref="recorderDao"></property>
	</bean>

	<bean id="recorderService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">

		<property name="target" ref="recorderServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>

		<property name="transactionAttributes">

			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>

		</property>

	</bean>

	<bean id="saveRecorderAction" class="com.integration.action.recorder.SaveRecorderAction"
		scope="prototype">
		<property name="recorderService" ref="recorderService"></property>
		<property name="bookService" ref="bookService"></property>
	</bean>

	<bean id="recorderServiceAction" class="com.integration.action.recorder.RecorderServiceAction"
		scope="prototype">
		<property name="bookService" ref="bookService"></property>
		<property name="recorderService" ref="recorderService"></property>
	</bean>

	<bean id="listRecorderAction" class="com.integration.action.recorder.ListRecorderAction"
		scope="prototype">
		<property name="bookService" ref="bookService"></property>
		<property name="recorderService" ref="recorderService"></property>
	</bean>

</beans>